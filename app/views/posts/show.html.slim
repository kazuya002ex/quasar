= provide(:title, "#{@post.title}")

.post-show-top
  .post-main-contents
    // 作品タイトル
    .post-show-title
      h2 = @post.title
    // 表紙画像
    .post-show-image
      - if @post.image.present?
        = image_tag(@post.image.url)
      - else
        = image_tag("book_sample.jpg")
    // お気に入り・編集アイコンなど
    .post-add-status
      / - if user_signed_in? && @post.user_id == current_user.id
      ul
        li = link_to "♡", "#"
        / li = link_to '概要を変更', edit_post_path(@post)
        / li = link_to '依頼を削除', @post, method: :delete, data: { confirm: '本文も全て消えてしまいます。削除してもよろしいですか？' }
    // あらすじ
    .post-desc
      h3 あらすじ 
      p = simple_format(@post.story)
    // お気に入り数・閲覧数
    .post-reaction
      ul
        li ♡ 12
        li め 240
    // 本文閲覧ボタン
    .post-reading-button
      p = link_to '本文を読んでみる', novel_path, class: 'btn btn-primary'




    // order の部分です
    .order
        - if user_signed_in?
          p.column ・著者達に求める展開
          = simple_format text_url_to_link(h(@post.order)).html_safe


    .novel-form
      - if user_signed_in?
        p 文章を作成
        = form_for [@post, @micropost] do |f|
          = f.text_field :content, :placeholder => "55文字以内で文章を作成"
          = f.submit '作成', data: { confirm: "投稿しますか？"}
      - else
        p 小説作成に参加するには、#{link_to "ログイン", new_user_session_path}してください




    .post-log
      h2 投稿ログ

      hr

      - @microposts.each do |micropost|
        .post-content
          p = micropost.content
        .post-user
          = link_to "#{micropost.user.name}", "/users/#{micropost.user_id}"
          - if user_signed_in? && micropost.user_id == current_user.id
            span |
            = link_to "削除", [@post, micropost], method: :delete, data: { confirm: '削除?' }
          p = "作成日時:#{time_ago_in_words(micropost.created_at)}前"

  // ユーザーを表示するところ
  .post-sub-contents
  
    .post-sub-title
      h3 依頼人

    .post-sub-user-name
      = link_to user_path(@post) do
        ul
          li.image ◯
          li.name #{@post.user.name}
