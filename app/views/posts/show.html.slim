= provide(:title, "#{@post.title}")

.post-show-top
  .post-main-contents
    // 作品タイトル
    .post-show-title
      h2 = @post.title
    // 表紙画像
    .post-show-image
      - if @post.image.present?
        = image_tag(@post.image.url)
      - else
        = image_tag("no_image_book.jpg")
    // お気に入り・編集アイコンなど
    .post-add-status
      ul
        - if user_signed_in? && @post.user_id == current_user.id
          li
            = link_to(edit_post_path(@post))
              = fa_icon("home")
            
          li = link_to '除', @post, method: :delete, data: { confirm: '本文も全て消えてしまいます。削除してもよろしいですか？' }
        - else
          li = link_to "♡", "#"
          li = link_to "あ", "#"
    // あらすじ
    .post-desc
      h3 あらすじ 
      p = simple_format(@post.story)
    // お気に入り数・閲覧数
    .post-reaction
      ul
        li ♡ 12
        li = "め #{@post.browsing}"
    // 本文閲覧ボタン
    .post-reading-button
      p = link_to '本文を読んでみる', novel_path, class: 'btn btn-primary'

    .post-add-contents
      .post-log
        h3 投稿ログ
        .post-log-contents
        - @microposts.each do |micropost|
          .post-log-main-content
            .post-log-user-img
              - if micropost.user.img.present?
                = link_to image_tag(micropost.user.img.url), "/users/#{micropost.user_id}"
              - else
                = link_to image_tag("no_image.png"), "/users/#{micropost.user_id}"
              
            .post-log-content
              p.name = link_to "#{micropost.user.name}", "/users/#{micropost.user_id}"
              p.micro = micropost.content
          .post-log-info
            p = "#{time_ago_in_words(micropost.created_at)}前"
            - if user_signed_in? && micropost.user_id == current_user.id
              p = link_to "・削除", [@post, micropost], method: :delete, data: { confirm: '削除?' }
      .post-add
        // 1行作業
        .micropost-form
          h3 1行投稿
          .novel-form
            - if user_signed_in?
              p 文章を作成
              = form_for [@post, @micropost] do |f|
                = f.text_field :content, :placeholder => "55文字以内で文章を作成"
                = f.submit '作成', data: { confirm: "投稿しますか？"}
            - else
              p.not-signin 小説作成に参加するには、#{link_to "サインイン", new_user_session_path}してください
        // 著者達に求める展開
        .post-order
          - if user_signed_in?
            p.column 著者達に求める展開
            = simple_format text_url_to_link(h(@post.order)).html_safe


  // 依頼人ユーザーを表示
  .post-sub-contents
    .post-sub-title
      h3 依頼人
    // 依頼人ユーザーのアイコンと名前
    .post-sub-user-name
      = link_to user_path(@post.user) do
        ul
          - if @post.user.img.present?
            li.image = image_tag @post.user.img.url 
          - else
            li.image = image_tag "no_image.png"
          li.name #{@post.user.name}
      = simple_format text_url_to_link(h(@post.user.profile)).html_safe
